from aiogram import Bot, Dispatcher, executor
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton, InlineKeyboardMarkup, \
    CallbackQuery
from pprint import pprint
import asyncio
import requests  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤

api_crypto = "https://min-api.cryptocompare.com/data/price?"
bot_token = "5179963786:AAFJ2x0BzJKFIebbKIl4ov3AgjXIvsSmWmo"

loop = asyncio.get_event_loop()  # –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ü–∏–∫–ª

bot = Bot(bot_token)
dp = Dispatcher(bot, loop)


@dp.message_handler(commands="start")
async def start_handler(message: Message):
    buttons = ReplyKeyboardMarkup(resize_keyboard=True)  #
    # buttons_list = [KeyboardButton(text="–ü—Ä–∏–≤–µ—Ç"),KeyboardButton(text="–õ–æ–∫–∞—Ü–∏—è"), KeyboardButton(text="–ö–∞–∫ –¥–µ–ª–∞?")]
    buttons.add(KeyboardButton(text="–ü—Ä–∏–≤–µ—Ç"))
    buttons.add(KeyboardButton(text="üí≤ USD üí≤"))
    buttons.add(KeyboardButton(text="ETH"))
    buttons.add(KeyboardButton(text="‚Çø BTC ‚Çø"))

    await message.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=buttons)


@dp.message_handler()  # –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä - –¥–æ–±–∞–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫ —Ñ—É–Ω–∫—Ü–∏–∏
async def exo(message: Message):
    if message.text == f"–ü—Ä–∏–≤–µ—Ç":
        await bot.send_sticker(chat_id=message.from_user.id,
                               sticker="CAACAgIAAxkBAAPgYksAASdHnPe1Z3M_20WyeKD16NQOAAJeCQACeVziCdXHsrIrmx2MIwQ")
    elif "usd" in message.text.lower():
        updates = requests.get(api_crypto + "fsym=USD&tsyms=RUB").json()
        await message.answer(text=f"1 USD = {updates['RUB']} RUB")
    elif "eth" in message.text.lower():
        buttons = InlineKeyboardMarkup()
        buttons.add(
            InlineKeyboardButton("USD", callback_data="ETH|USD"),
            InlineKeyboardButton("RUB", callback_data="ETH|RUB"),
            InlineKeyboardButton("EUR", callback_data="ETH|EUR"))
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏", reply_markup=buttons)
    elif "btc" in message.text.lower():
        buttons = InlineKeyboardMarkup()
        buttons.add(
            InlineKeyboardButton("USD", callback_data="BTC|USD"),
            InlineKeyboardButton("RUB", callback_data="BTC|RUB"),
            InlineKeyboardButton("EUR", callback_data="BTC|EUR"))
        await message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏", reply_markup=buttons)
    else:
        text = f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è {message.from_user.first_name}, {message.text}"
        await bot.send_message(chat_id=message.from_user.id, text=text, reply_to_message_id=message.message_id)


@dp.callback_query_handler()
async def open(callback: CallbackQuery):
    data = callback.data.split("|")  # [ETH,RUB]
    if data[0] == "ETH":
        updates = requests.get(api_crypto + "fsym=ETH&tsyms=USD,RUB,EUR").json()
        # {'USD': , 'RUB': }
        await bot.send_message(callback.from_user.id, text=f"1 ETH = {updates[data[1]]} {data[1]}")
    elif data[0] == "BTC":
        updates = requests.get(api_crypto + "fsym=BTC&tsyms=USD,RUB,EUR").json()
        await bot.send_message(callback.from_user.id, text=f"1 BTC = {updates[data[1]]} {data[1]}")


executor.start_polling(dp)
